#!/bin/bash
#
# Initial script for MagicOS-Linux Live operating system.
# This script add missing GenericName if Comment exists and add missing Comment if GenericName exists
# and works for [$LANGUAGE] also.
# License: GPL last version. Лицензия: GPL последней версии.
# Author: Alexey Loginov.
# Автор: Алексей Логинов.
#
ENABLED=yes
[ "$ENABLED" != "yes" ] && exit 0

DEBUGMODE=no
. /liblinuxlive 2>/dev/null || . /mnt/live/liblinuxlive
#debug_mode "$0" "$@"

VER=`cat /mnt/live/VERSION|awk '{print $2}'`
ONCE=`cat /etc/once_boot_scripts|grep $(basename $0)-$VER`
if [ ! "$ONCE" = "" ]
then
  exit 0
fi

check-nodisplay ()
{
NODISPLAY=false
X1=`cat $1|grep "NoDisplay=true"`
if [ ! "$X1" = "" ]
then
  NODISPLAY=true
  #echo "$A has NoDisplay=true"
fi
}

needs-genericname ()
{
NEEDS_GENERICNAME=true
X1=`cat $1|grep "NotShowIn"|grep "KDE"`
if [ ! "$X1" = "" ]
then
  NEEDS_GENERICNAME=false
  #echo "$1 has NotShowIn=KDE"
  return
fi
X2=`cat $1|grep "OnlyShowIn"|grep "LXDE"`
if [ ! "$X2" = "" ]
then
  NEEDS_GENERICNAME=false
  #echo "$1 has OnlyShowIn=LXDE"
  return
fi
X3=`cat $1|grep "OnlyShowIn"|grep "MATE"`
if [ ! "$X3" = "" ]
then
  NEEDS_GENERICNAME=false
  #echo "$1 has OnlyShowIn=MATE"
  return
fi
X4=`cat $1|grep "OnlyShowIn"|grep "GNOME"`
if [ ! "$X4" = "" ]
then
  NEEDS_GENERICNAME=false
  #echo "$1 has OnlyShowIn=GNOME"
  return
fi
X5=`cat $1|grep "OnlyShowIn"|grep "XFCE"`
if [ ! "$X5" = "" ]
then
  NEEDS_GENERICNAME=false
  #echo "$1 has OnlyShowIn=XFCE"
  return
fi
}

correct-file ()
{
cd $1
#add Enter if somebody forgot
printf "\n" >> "$2"
#delete all empty lines
sed -i '/^$/d' "$2"
}

auto-translate ()
{
cd $1
for A in `ls -1|grep .desktop`
do
  if [ "$A" = "xfburn.desktop" ]
  then
    continue
  fi
  if [ "$A" = "konsole.desktop" ]
  then
    continue
  fi
  if [ "$A" = "fp-ide-ru.desktop" ]
  then
    continue
  fi
  if [ "$A" = "qutim.desktop" ]
  then
    continue
  fi
  if [ "$A" = "smplayer.desktop" ]
  then
    continue
  fi
  if [ "$A" = "vlc.desktop" ]
  then
    continue
  fi
  if [ "$A" = "ktorrent.desktop" ]
  then
    continue
  fi
  if [ "$A" = "lazarus.desktop" ]
  then
    continue
  fi
  if [ "$A" = "mc-desktop-root.desktop" ]
  then
    continue
  fi
  if [ "$A" = "mc-desktop.desktop" ]
  then
    continue
  fi
  if [ "$A" = "smathstudio.desktop" ]
  then
    continue
  fi
  check-nodisplay $A
  if [ "$NODISPLAY" = "true" ]
  then
    continue
  fi
  B0=`cat $A|grep "Comment="|cut -d "=" --fields=2`
  B=`cat $A|grep "Comment\[$2\]"|cut -d "=" --fields=2`
  C0=`cat $A|grep "GenericName="|cut -d "=" --fields=2`
  C=`cat $A|grep "GenericName\[$2\]"|cut -d "=" --fields=2`
  if [ "$B0" = "" ]
  then
    if [ ! "$C0" = "" ]
    then
       #echo "Add Comment=$C0 >> $DIRECTORY/$A"
       correct-file $1 $A
       echo "Comment=$C0" >> $A
       if [ "$3" = "yes" ]
       then
         desktop-file-validate $A >> /tmp/auto-translate-menu.log
       fi
    fi
  fi
  if [ "$B" = "" ]
  then
    if [ ! "$C" = "" ]
    then
       #echo "Add Comment[$2]=$C >> $DIRECTORY/$A"
       correct-file $1 $A
       echo "Comment[$2]=$C" >> $A
       if [ "$3" = "yes" ]
       then
         desktop-file-validate $A >> /var/log/auto-translate-menu.log
       fi
    fi
  fi
  if [ "$C0" = "" ]
  then
    if [ ! "$B0" = "" ]
    then
       needs-genericname $A
       if [ "$NEEDS_GENERICNAME" = "false" ]
       then
         continue
       fi
       #echo "Add GenericName=$B0 >> $DIRECTORY/$A"
       correct-file $1 $A
       echo "GenericName=$B0" >> $A
       if [ "$3" = "yes" ]
       then
         desktop-file-validate $A >> /tmp/auto-translate-menu.log
       fi
    fi
  fi
  if [ "$C" = "" ]
  then
    if [ ! "$B" = "" ]
    then
       #echo "Add GenericName[$2]=$B >> $DIRECTORY/$A"
       correct-file $1 $A
       echo "GenericName[$2]=$B" >> $A
       if [ "$3" = "yes" ]
       then
         desktop-file-validate $A >> /var/log/auto-translate-menu.log
       fi
    fi
  fi
done
}

LANG0=`cat /etc/sysconfig/i18n|grep ru_RU`
if [ "$LANG0" = "" ]
then
  LANGUAGE="en"
else
  LANGUAGE="ru"
fi

echo "Start auto translation Menu for $LANGUAGE language"

DEBUG=yes

if [ "$DEBUG" = "yes" ]
then
  date >> /var/log/auto-translate-menu.log
  date >> /var/log/auto-translate-menu-errors.log
fi

DIRECTORY="/usr/share/applications"
auto-translate $DIRECTORY $LANGUAGE $DEBUG

DIRECTORY="/usr/share/applications/kde4"
auto-translate $DIRECTORY $LANGUAGE $DEBUG

if [ "$DEBUG" = "yes" ]
then
  cat /var/log/auto-translate-menu.log|grep "error:"|grep -v "(will be fatal in the future):" >> /var/log/auto-translate-menu-errors.log
fi

echo "Auto translation for Menu was finished"

echo $(basename $0)-$VER >> /etc/once_boot_scripts
